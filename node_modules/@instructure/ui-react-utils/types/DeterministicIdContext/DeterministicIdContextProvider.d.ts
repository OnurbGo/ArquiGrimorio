type DeterministicIdProviderValue = Map<string, number>;
type DeterministicIdProviderProps = React.PropsWithChildren<{
    /**
     * @deprecated the `instanceCounterMap` prop is deprecated. You don't need to
     * supply the `instanceCounterMap` to the component. It handles it internally.
     * If you use this make sure that it generates unique IDs across app instances
     * like in module federation.
     */
    instanceCounterMap?: DeterministicIdProviderValue;
}>;
/**
 * ---
 * category: components/utilities
 * ---
 * WARNING: providing the `instanceCounterMap` prop will result in unexpected behaviour. DO NOT USE IT!
 *
 * DEPRECATED: the `instanceCounterMap` prop is deprecated. You don't need to supply the
 * `instanceCounterMap` to the component. It handles it internally.
 *
 * This is utility component for wrapping components with `DeterministicIdContext.Provider`
 * See detailed documentation about how to use it: [InstUISettingsProvider](/#InstUISettingsProvider)
 */
declare const DeterministicIdContextProvider: ({ children, instanceCounterMap }: DeterministicIdProviderProps) => import("@emotion/react/jsx-runtime").JSX.Element;
export { DeterministicIdContextProvider };
export type { DeterministicIdProviderValue };
//# sourceMappingURL=DeterministicIdContextProvider.d.ts.map