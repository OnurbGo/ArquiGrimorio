import PropTypes from 'prop-types';
import type { BorderRadiiValues, BorderRadii, BorderWidthValues, BorderWidth, SpacingValues } from './ThemeablePropValues';
/**
 * ---
 * category: utilities/themes
 * ---
 * Custom prop types for themeable React components.
 * @module ThemeablePropTypes
 */
declare const ThemeablePropTypes: {
    shadow: PropTypes.Requireable<"resting" | "above" | "topmost" | "none">;
    stacking: PropTypes.Requireable<"resting" | "above" | "topmost" | "below" | "deepest">;
    borderWidth: PropTypes.Validator<BorderWidth>;
    borderRadius: PropTypes.Validator<string>;
    background: PropTypes.Requireable<"default" | "inverse" | "transparent">;
    size: PropTypes.Requireable<"small" | "medium" | "large" | "x-small" | "x-large">;
};
type ValueKeys = BorderWidthValues[] | BorderRadiiValues[] | SpacingValues[] | string[];
declare function shorthandPropType<V extends ValueKeys>(validValues: V): PropTypes.Validator<V extends BorderWidthValues[] ? BorderWidth : V extends BorderRadiiValues[] ? BorderRadii : string[]>;
export default ThemeablePropTypes;
export { ThemeablePropTypes, shorthandPropType };
//# sourceMappingURL=ThemeablePropTypes.d.ts.map