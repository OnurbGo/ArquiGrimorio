import PropTypes from 'prop-types';
import type { ThemeOrOverride } from '../EmotionTypes';
import type { DeterministicIdProviderValue } from '@instructure/ui-react-utils';
import type { AsElementType } from '@instructure/shared-types';
type InstUIProviderProps = {
    children?: React.ReactNode;
    /**
     * A full theme or an override object
     */
    theme?: ThemeOrOverride;
    /**
     * @deprecated the `instanceCounterMap` prop is deprecated. You don't need to supply the
     * `instanceCounterMap` to the component. It handles it internally.
     *
     * A [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) which keeps track of
     * specific InstUI components. (generally this is used for deterministic id generation for [SSR](/#server-side-rendering))
     */
    instanceCounterMap?: DeterministicIdProviderValue;
} & ({
    /**
     * The text direction to use in the descendants. If not provided, it uses the following in this priority order:
     *   - The value given in a parent `TextDirectionContext`
     *   - The `dir` prop of `document.documentElement` or its `direction` CSS prop
     *   - The default `ltr`
     */
    dir: 'ltr' | 'rtl';
    /**
     *  @deprecated This prop will be removed in InstUI v11
     *
     *  The element type to render as
     */
    as?: AsElementType;
} | {
    dir?: never;
    /**
     *  @deprecated This prop will be removed in InstUI v11
     *
     *  The element type to render as
     */
    as?: never;
});
/**
 * ---
 * category: components/utilities
 * ---
 * @module InstUISettingsProvider
 */
declare function InstUISettingsProvider({ children, theme, dir, instanceCounterMap, as }: InstUIProviderProps): import("@emotion/react/jsx-runtime").JSX.Element;
declare namespace InstUISettingsProvider {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        theme: PropTypes.Requireable<object>;
        dir: PropTypes.Requireable<string>;
        instanceCounterMap: PropTypes.Requireable<Map<unknown, unknown>>;
        as: PropTypes.Requireable<string>;
    };
}
export default InstUISettingsProvider;
export { InstUISettingsProvider };
//# sourceMappingURL=index.d.ts.map