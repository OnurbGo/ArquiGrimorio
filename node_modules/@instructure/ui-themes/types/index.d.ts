import type { CanvasHighContrastTheme } from './themes/canvasHighContrast';
import type { CanvasTheme, CanvasBrandVariables } from './themes/canvas';
import type { BaseTheme, Primitives, AdditionalPrimitives, DataVisualization, UI } from '@instructure/shared-types';
import canvasHighContrast, { canvasHighContrastThemeLocal } from './themes/canvasHighContrast';
import canvas, { canvasThemeLocal } from './themes/canvas';
import { primitives, additionalPrimitives } from './sharedThemeTokens/colors/primitives';
import dataVisualization from './sharedThemeTokens/colors/dataVisualization';
type ThemeMap = {
    canvas: CanvasTheme;
    'canvas-high-contrast': CanvasHighContrastTheme;
    [k: string]: BaseTheme;
};
type ThemeKeys = keyof ThemeMap;
type Theme = BaseTheme & {
    key: ThemeKeys;
} & Partial<CanvasBrandVariables>;
type ThemeSpecificStyle<ComponentTheme> = {
    [themeKey in ThemeKeys]?: Partial<ComponentTheme>;
};
export { canvas, canvasThemeLocal, canvasHighContrast, canvasHighContrastThemeLocal, primitives, additionalPrimitives, dataVisualization };
export default canvas;
export type { ThemeMap, BaseTheme, Theme, ThemeKeys, ThemeSpecificStyle, CanvasTheme, CanvasBrandVariables, CanvasHighContrastTheme, Primitives, AdditionalPrimitives, DataVisualization, UI };
//# sourceMappingURL=index.d.ts.map