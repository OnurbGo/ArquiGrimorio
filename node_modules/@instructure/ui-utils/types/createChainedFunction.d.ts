type GenericFunction = (...args: any[]) => any;
/**
 * ---
 * category: utilities/react
 * ---
 * Safe chained functions
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * Forked from: https://github.com/react-bootstrap/react-overlays/blob/master/src/utils/createChainedFunction.js
 * @module createChainedFunction
 * @param funcs Functions to chain. It can be null/undefined
 * @returns the functions chained after each other
 */
declare function createChainedFunction<F extends GenericFunction = GenericFunction>(...funcs: (null | undefined | F)[]): undefined | F;
export default createChainedFunction;
export { createChainedFunction };
//# sourceMappingURL=createChainedFunction.d.ts.map