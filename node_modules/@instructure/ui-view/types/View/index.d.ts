import { Component, ComponentType } from 'react';
import type { ViewProps } from './props';
/**
---
category: components
---
@module View
**/
declare class View extends Component<ViewProps> {
    static componentId: string;
    static allowedProps: readonly (keyof import("./props").ViewOwnProps)[];
    static propTypes: import("@instructure/shared-types").PropValidators<keyof import("./props").ViewOwnProps>;
    static defaultProps: {
        readonly display: "auto";
        readonly overflowX: "visible";
        readonly overflowY: "visible";
        readonly withVisualDebug: false;
        readonly borderColor: "primary";
        readonly position: "static";
        readonly focusPosition: "offset";
        readonly focusColor: "info";
        readonly shouldAnimateFocus: true;
        readonly overscrollBehavior: "auto";
    };
    static omitViewProps: (props: Record<string, any>, Component: ComponentType<any>) => Record<string, any>;
    private spanMarginVerified;
    get _element(): Element | null;
    constructor(props: ViewProps);
    componentDidMount(): void;
    componentDidUpdate(): void;
    ref: Element | null;
    handleElementRef: (el: Element | null) => void;
    render(): import("@emotion/react/jsx-runtime").JSX.Element;
}
export default View;
export { View };
//# sourceMappingURL=index.d.ts.map